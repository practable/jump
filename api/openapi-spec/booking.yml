swagger: '2.0'
info:
  version: '0.3'
  title: Booking
  description: User API for booking experiments
  contact:
    email: timothy.d.drysdale@gmail.com
    name: Tim Drysdale
    url: https://practable.io
host: book.practable.io
basePath: /api/v1
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header 
schemes: []
consumes:
- application/json
produces:
- application/json
paths:
  /groups:
    get:
      description: Gets group id for a given group name
      summary: groups
      tags:
      - groups
      operationId: getGroupIDByName
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: name
        in: query
        required: true
        type: string
        description: Search by group name
      security:
        - Bearer: []  
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              type: string
              description: group id
              example: 3a834b55-07c8-cb39-a341-3a82b263e07c
          headers: {}
  /groups/{group_id}:
    get:
      description: Gets a description of a group
      summary: groups
      tags:
      - groups
      operationId: getGroupDescriptionByID
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: group_id
        in: path
        required: true
        type: string
        description: ''
      security:
        - Bearer: []  
      responses:
         200:
          description: ''
          schema:
            $ref: '#/definitions/description'
          headers: {}  
  /pools:
    get:
      description: Gets a list of pool_ids associated with a group_id
      summary: get pool ids in a group
      tags:
      - pools
      operationId: getPoolsByGroupID
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: group_id
        in: query
        required: true
        type: string
        description: Search by group name
      security:
        - Bearer: []  
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              type: string
              description: pool id
              example: 5a834b5d-0758-4039-a044-6a82b263e079
          headers: {}
    post:
      description: Add a pool to the poolstore, using details in body 
      summary: Add a new pool
      tags:
      - pools
      operationId: addNewPool
      deprecated: false
      produces:
      - application/json
      parameters:
      - in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/activity'  
      security:
        - Bearer: []  
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/id'
          headers: {}       
        
  /pools/{pool_id}/description:
    get:
      description: Gets a description of the pool
      summary: pools
      tags:
      - pools
      operationId: getPoolDescriptionByID
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: pool_id
        in: path
        required: true
        type: string
        description: ''
      security:
        - Bearer: []  
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/id'
          headers: {}
  /pools/{pool_id}/status:
    get:
      description: Gets the status of pool's activities
      summary: Gets the status of the pool's activities
      tags:
      - pools
      operationId: getPoolStatusByID
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: pool_id
        in: path
        required: true
        type: string
        description: ''
      security:
        - Bearer: []  
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/status'
          headers: {}          
  /pools/{pool_id}/sessions:
    post:
      description: Request a session on an activity from the pool
      summary: Requests a session from a pool
      tags:
      - pools
      operationId: requestSessionByPoolID
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: duration
        in: query
        required: true
        type: integer
        format: int64
        description: duration of requested booking in seconds
      - name: pool_id
        in: path
        required: true
        type: string
        description: ''
      security:
        - Bearer: [] 
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/activity'
          headers: {}
        401:
          description: Unauthorized
          schema: {}
        402:
          description: Quota Exceeded
          schema: {}
        404:
          description: Not Available
          schema: {}
  /pools/{pool_id}/activities/{activity_id}:
    put:
      description: Updates an activity in a pool (or adds one with a specific ID if does not exist)
      summary: Update an activity in a pool
      tags:
      - pools
      operationId: updateActivityByID
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: pool_id
        in: path
        required: true
        type: string
        description: ''
      - name: activity_id
        in: path
        required: true
        type: string
        description: ''
      - in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/activity'  
      security:
        - Bearer: [] 
      responses:
        200:
          description: ''
          schema:  {}
        401:
          description: Unauthorized
          schema: {}
  /pools/{pool_id}/activities:
    post:
      description:  Adds an activity to a pool (activty must include valid exp field)
      summary: Adds an activity to a pool
      tags:
      - pools
      operationId: addActivityByPoolID
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: pool_id
        in: path
        required: true
        type: string
        description: ''
      - in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/activity'
      security:
        - Bearer: [] 
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/id'
          headers: {}
        401:
          description: Unauthorized
          schema: {}
        404:
          description: Not Available
          schema: {}          
  /login:
    post:
      description: Login with a class token to get an individual booking token, usable for a finite period.
      summary: login
      tags:
      - login
      operationId: login
      deprecated: false
      produces:
      - application/json
      parameters:
      - in: body
        name: expired
        required: false
        schema:
          type: object
          properties:
            token:
              type: string
              description: booking token
              example: ey...
      security:
        - Bearer: [] 
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/bookingtoken'
          headers: {}
        401:
          description: Unauthorized
          schema: {}
        500:
          description: Internal Error
          schema: {}
definitions:
  stream:
    title: stream
    description: Represents an assigned, valid booking slot for an individual piece of equipment
    example:
      for: video
      url: https://relay-access.practable.io/session/abc123
      token: ey....
    type: object
    properties:
      for:
        description: Describes the stream, and doubles as template key in the URL
        example: video
        type: string
      url:
        description: URL at which to obtain access to the stream (getting a redirect URL containing a one time code)
        example: https://relay-access.practable.io/session/abc123
        type: string
      token:
        description: JWT bearer token for submitting in the header when making the request at the URL
        type: string
      verb:
        description: HTPP verb to use when making request to the URL
        example: POST
        type: string
        default: POST
      iat:
        description: Issued At
        type: number
        format: unix-timestamp
      nbf:
        description: Not Before
        type: number
        format: unix-timestamp
      exp:
        description: Expires At
        type: number
        format: unix-timestamp
    required:
    - for
    - url
    - token
  activity:
    title: activity
    description: An activity represents connection details to instances of pre-agreed resource types such as video, data streams and user interfaces.
    type: object
    properties:
      streams:
        description: A list of streams
        type: array
        items:
          $ref: '#/definitions/stream'
      uis:
        description: User interfaces
        type: array
        items:
          $ref: '#/definitions/userInterface'
      description:
        $ref: '#/definitions/description'
      iat:
        description: Issued At
        type: number
        format: unix-timestamp
      nbf:
        description: Not before
        type: number
        format: unix-timestamp
      exp:
        description: Expires At
        type: number
        format: unix-timestamp
      aud:
        description: Audience
        type: string
      sub:
        description: Subject
        type: string
      iss:
        description: Issuer
        type: string
    required:
    - streams
    - uis
    - description
    - nbf
    - exp
    - aud
  userInterface:
    title: userInterface
    description: User interface
    type: object
    properties:
      url:
        description: URL of the user interface
        example: https://static.practable.io/ui/penduino-basic.html?video={{video}}&data={{data}}
        type: string
      streamsRequired:
        description: list of names of required streams
        example: ["data","video"]
        type: array
        items:
          type: string
          example: video
          description: stream name
      description:
        $ref: '#/definitions/description'
    required:
    - url
    - description
  description:
    title: description
    description: Description of a resource e.g. pool, activity, user interface 
    example:
      name: Penduino (basic)
      type: pool
      short: Penduino electromagnetic pendulums with pulsed drive and braking
      long: Some longer description
      further: https://static.practable.io/descriptions/pools/penduino/index.html
      thumb: https://assets.practable.io/images/pools/penduino/thumb.png
      image: https://assets.practable.io/images/pools/penduino/image.png
    type: object
    properties:
      name:
        description: Display name
        example: Penduino (basic)
        type: string
      short:
        description: 140 char max description of the interface in plain text
        example: Interface to the penduino electromagnetic pendulum with variable drive, active braking, short and open circuit loading.
        type: string
      long:
        description: 280 char additional description of the interface in plain text
        type: string
      further:
        description: URL for further information
        example: https://static.practable.io/info/penduino/ui.html
        type: string
      thumb:
        description: URL of thumbnail image (150x150)
        example: https://assets.practable.io/images/penduino-150x150.png
        type: string
      image:
        description: URL of main image (500x500)
        example: https://assets.practable.io/images/penduino-500x500.png
        type: string
      type:
        description: Type of resource being described, e.g. pool, activity, userinterface
        example: userinterface
        type: string
    required:
    - name
    - type
  status:
    title: status
    description: Status of a pool
    example:
      available: 3
      wait: 0
      inuse: 5
    type: object
    properties:
      available:
        description: Number of available kits
        example: 3
        type: number
        format: int
      wait:
        description: Wait time in seconds until first available kit
        example: 3200
        type: number
        format: int64
      used:
        description: Number of kits in use
        example: 5
        type: number
        format: int
    required:
    - available
  id:
    title: id
    description: id of a resource
    example:
      id: d220c320-eb88-456b-b1dd-b36dae840af2
    type: object
    properties:
      id:
        description: identification
        example: d220c320-eb88-456b-b1dd-b36dae840af2
        type: string
    required:
    - id
  bookingtoken:
    title: booking token details
    description: contains token plus its details
    type: object
    properties:
      token:
        description: booking token
        example: ey...
        type: string
      iat:
        description: Issued At
        type: number
        format: unix-timestamp
      nbf:
        description: Not before
        type: number
        format: unix-timestamp
      exp:
        description: Expires At
        type: number
        format: unix-timestamp
      aud:
        description: Audience
        type: string
      sub:
        description: Subject
        type: string
      groups:
        description: List of groups
        type: array
        items:
          type: string
          example: d220c320-eb88-456b-b1dd-b36dae840af2
      scopes:
        description: List of scopes
        type: array
        items:
          type: string
          example: booking          
    required:
    - token
    - nbf
    - exp
    - aud
    - sub
    - groups
    - scopes
tags:
- name: groups
  description: ''
- name: pools
  description: ''
- name: login
  description: ''
  
