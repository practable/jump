// Code generated by go-swagger; DO NOT EDIT.

package pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// UpdateActivityByIDOKCode is the HTTP code returned for type UpdateActivityByIDOK
const UpdateActivityByIDOKCode int = 200

/*UpdateActivityByIDOK update activity by Id o k

swagger:response updateActivityByIdOK
*/
type UpdateActivityByIDOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateActivityByIDOK creates UpdateActivityByIDOK with default headers values
func NewUpdateActivityByIDOK() *UpdateActivityByIDOK {

	return &UpdateActivityByIDOK{}
}

// WithPayload adds the payload to the update activity by Id o k response
func (o *UpdateActivityByIDOK) WithPayload(payload interface{}) *UpdateActivityByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update activity by Id o k response
func (o *UpdateActivityByIDOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateActivityByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateActivityByIDUnauthorizedCode is the HTTP code returned for type UpdateActivityByIDUnauthorized
const UpdateActivityByIDUnauthorizedCode int = 401

/*UpdateActivityByIDUnauthorized Unauthorized

swagger:response updateActivityByIdUnauthorized
*/
type UpdateActivityByIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateActivityByIDUnauthorized creates UpdateActivityByIDUnauthorized with default headers values
func NewUpdateActivityByIDUnauthorized() *UpdateActivityByIDUnauthorized {

	return &UpdateActivityByIDUnauthorized{}
}

// WithPayload adds the payload to the update activity by Id unauthorized response
func (o *UpdateActivityByIDUnauthorized) WithPayload(payload interface{}) *UpdateActivityByIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update activity by Id unauthorized response
func (o *UpdateActivityByIDUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateActivityByIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateActivityByIDNotFoundCode is the HTTP code returned for type UpdateActivityByIDNotFound
const UpdateActivityByIDNotFoundCode int = 404

/*UpdateActivityByIDNotFound Not Found

swagger:response updateActivityByIdNotFound
*/
type UpdateActivityByIDNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateActivityByIDNotFound creates UpdateActivityByIDNotFound with default headers values
func NewUpdateActivityByIDNotFound() *UpdateActivityByIDNotFound {

	return &UpdateActivityByIDNotFound{}
}

// WithPayload adds the payload to the update activity by Id not found response
func (o *UpdateActivityByIDNotFound) WithPayload(payload interface{}) *UpdateActivityByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update activity by Id not found response
func (o *UpdateActivityByIDNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateActivityByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateActivityByIDInternalServerErrorCode is the HTTP code returned for type UpdateActivityByIDInternalServerError
const UpdateActivityByIDInternalServerErrorCode int = 500

/*UpdateActivityByIDInternalServerError Internal Error

swagger:response updateActivityByIdInternalServerError
*/
type UpdateActivityByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateActivityByIDInternalServerError creates UpdateActivityByIDInternalServerError with default headers values
func NewUpdateActivityByIDInternalServerError() *UpdateActivityByIDInternalServerError {

	return &UpdateActivityByIDInternalServerError{}
}

// WithPayload adds the payload to the update activity by Id internal server error response
func (o *UpdateActivityByIDInternalServerError) WithPayload(payload interface{}) *UpdateActivityByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update activity by Id internal server error response
func (o *UpdateActivityByIDInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateActivityByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
