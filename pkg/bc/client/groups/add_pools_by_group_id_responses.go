// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/relay/pkg/bc/models"
)

// AddPoolsByGroupIDReader is a Reader for the AddPoolsByGroupID structure.
type AddPoolsByGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPoolsByGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddPoolsByGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddPoolsByGroupIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddPoolsByGroupIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddPoolsByGroupIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddPoolsByGroupIDOK creates a AddPoolsByGroupIDOK with default headers values
func NewAddPoolsByGroupIDOK() *AddPoolsByGroupIDOK {
	return &AddPoolsByGroupIDOK{}
}

/*AddPoolsByGroupIDOK handles this case with default header values.

AddPoolsByGroupIDOK add pools by group Id o k
*/
type AddPoolsByGroupIDOK struct {
	Payload models.IDList
}

func (o *AddPoolsByGroupIDOK) Error() string {
	return fmt.Sprintf("[POST /groups/{group_id}/pools][%d] addPoolsByGroupIdOK  %+v", 200, o.Payload)
}

func (o *AddPoolsByGroupIDOK) GetPayload() models.IDList {
	return o.Payload
}

func (o *AddPoolsByGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPoolsByGroupIDUnauthorized creates a AddPoolsByGroupIDUnauthorized with default headers values
func NewAddPoolsByGroupIDUnauthorized() *AddPoolsByGroupIDUnauthorized {
	return &AddPoolsByGroupIDUnauthorized{}
}

/*AddPoolsByGroupIDUnauthorized handles this case with default header values.

Unauthorized
*/
type AddPoolsByGroupIDUnauthorized struct {
	Payload interface{}
}

func (o *AddPoolsByGroupIDUnauthorized) Error() string {
	return fmt.Sprintf("[POST /groups/{group_id}/pools][%d] addPoolsByGroupIdUnauthorized  %+v", 401, o.Payload)
}

func (o *AddPoolsByGroupIDUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *AddPoolsByGroupIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPoolsByGroupIDNotFound creates a AddPoolsByGroupIDNotFound with default headers values
func NewAddPoolsByGroupIDNotFound() *AddPoolsByGroupIDNotFound {
	return &AddPoolsByGroupIDNotFound{}
}

/*AddPoolsByGroupIDNotFound handles this case with default header values.

Not Found
*/
type AddPoolsByGroupIDNotFound struct {
}

func (o *AddPoolsByGroupIDNotFound) Error() string {
	return fmt.Sprintf("[POST /groups/{group_id}/pools][%d] addPoolsByGroupIdNotFound ", 404)
}

func (o *AddPoolsByGroupIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPoolsByGroupIDInternalServerError creates a AddPoolsByGroupIDInternalServerError with default headers values
func NewAddPoolsByGroupIDInternalServerError() *AddPoolsByGroupIDInternalServerError {
	return &AddPoolsByGroupIDInternalServerError{}
}

/*AddPoolsByGroupIDInternalServerError handles this case with default header values.

AddPoolsByGroupIDInternalServerError add pools by group Id internal server error
*/
type AddPoolsByGroupIDInternalServerError struct {
	Payload interface{}
}

func (o *AddPoolsByGroupIDInternalServerError) Error() string {
	return fmt.Sprintf("[POST /groups/{group_id}/pools][%d] addPoolsByGroupIdInternalServerError  %+v", 500, o.Payload)
}

func (o *AddPoolsByGroupIDInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *AddPoolsByGroupIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
