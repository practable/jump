// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/practable/relay/internal/booking/models"
)

// ImportPoolStoreOKCode is the HTTP code returned for type ImportPoolStoreOK
const ImportPoolStoreOKCode int = 200

/*ImportPoolStoreOK import pool store o k

swagger:response importPoolStoreOK
*/
type ImportPoolStoreOK struct {

	/*
	  In: Body
	*/
	Payload *models.StoreStatus `json:"body,omitempty"`
}

// NewImportPoolStoreOK creates ImportPoolStoreOK with default headers values
func NewImportPoolStoreOK() *ImportPoolStoreOK {

	return &ImportPoolStoreOK{}
}

// WithPayload adds the payload to the import pool store o k response
func (o *ImportPoolStoreOK) WithPayload(payload *models.StoreStatus) *ImportPoolStoreOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the import pool store o k response
func (o *ImportPoolStoreOK) SetPayload(payload *models.StoreStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImportPoolStoreOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ImportPoolStoreUnauthorizedCode is the HTTP code returned for type ImportPoolStoreUnauthorized
const ImportPoolStoreUnauthorizedCode int = 401

/*ImportPoolStoreUnauthorized Unauthorized

swagger:response importPoolStoreUnauthorized
*/
type ImportPoolStoreUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewImportPoolStoreUnauthorized creates ImportPoolStoreUnauthorized with default headers values
func NewImportPoolStoreUnauthorized() *ImportPoolStoreUnauthorized {

	return &ImportPoolStoreUnauthorized{}
}

// WithPayload adds the payload to the import pool store unauthorized response
func (o *ImportPoolStoreUnauthorized) WithPayload(payload interface{}) *ImportPoolStoreUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the import pool store unauthorized response
func (o *ImportPoolStoreUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImportPoolStoreUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ImportPoolStoreInternalServerErrorCode is the HTTP code returned for type ImportPoolStoreInternalServerError
const ImportPoolStoreInternalServerErrorCode int = 500

/*ImportPoolStoreInternalServerError import pool store internal server error

swagger:response importPoolStoreInternalServerError
*/
type ImportPoolStoreInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewImportPoolStoreInternalServerError creates ImportPoolStoreInternalServerError with default headers values
func NewImportPoolStoreInternalServerError() *ImportPoolStoreInternalServerError {

	return &ImportPoolStoreInternalServerError{}
}

// WithPayload adds the payload to the import pool store internal server error response
func (o *ImportPoolStoreInternalServerError) WithPayload(payload interface{}) *ImportPoolStoreInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the import pool store internal server error response
func (o *ImportPoolStoreInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImportPoolStoreInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
