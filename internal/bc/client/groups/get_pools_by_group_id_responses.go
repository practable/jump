// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/practable/relay/internal/bc/models"
)

// GetPoolsByGroupIDReader is a Reader for the GetPoolsByGroupID structure.
type GetPoolsByGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPoolsByGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPoolsByGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPoolsByGroupIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPoolsByGroupIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPoolsByGroupIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPoolsByGroupIDOK creates a GetPoolsByGroupIDOK with default headers values
func NewGetPoolsByGroupIDOK() *GetPoolsByGroupIDOK {
	return &GetPoolsByGroupIDOK{}
}

/* GetPoolsByGroupIDOK describes a response with status code 200, with default header values.

GetPoolsByGroupIDOK get pools by group Id o k
*/
type GetPoolsByGroupIDOK struct {
	Payload models.IDList
}

func (o *GetPoolsByGroupIDOK) Error() string {
	return fmt.Sprintf("[GET /groups/{group_id}/pools][%d] getPoolsByGroupIdOK  %+v", 200, o.Payload)
}
func (o *GetPoolsByGroupIDOK) GetPayload() models.IDList {
	return o.Payload
}

func (o *GetPoolsByGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoolsByGroupIDUnauthorized creates a GetPoolsByGroupIDUnauthorized with default headers values
func NewGetPoolsByGroupIDUnauthorized() *GetPoolsByGroupIDUnauthorized {
	return &GetPoolsByGroupIDUnauthorized{}
}

/* GetPoolsByGroupIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPoolsByGroupIDUnauthorized struct {
	Payload interface{}
}

func (o *GetPoolsByGroupIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /groups/{group_id}/pools][%d] getPoolsByGroupIdUnauthorized  %+v", 401, o.Payload)
}
func (o *GetPoolsByGroupIDUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *GetPoolsByGroupIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoolsByGroupIDNotFound creates a GetPoolsByGroupIDNotFound with default headers values
func NewGetPoolsByGroupIDNotFound() *GetPoolsByGroupIDNotFound {
	return &GetPoolsByGroupIDNotFound{}
}

/* GetPoolsByGroupIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetPoolsByGroupIDNotFound struct {
	Payload interface{}
}

func (o *GetPoolsByGroupIDNotFound) Error() string {
	return fmt.Sprintf("[GET /groups/{group_id}/pools][%d] getPoolsByGroupIdNotFound  %+v", 404, o.Payload)
}
func (o *GetPoolsByGroupIDNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetPoolsByGroupIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoolsByGroupIDInternalServerError creates a GetPoolsByGroupIDInternalServerError with default headers values
func NewGetPoolsByGroupIDInternalServerError() *GetPoolsByGroupIDInternalServerError {
	return &GetPoolsByGroupIDInternalServerError{}
}

/* GetPoolsByGroupIDInternalServerError describes a response with status code 500, with default header values.

GetPoolsByGroupIDInternalServerError get pools by group Id internal server error
*/
type GetPoolsByGroupIDInternalServerError struct {
	Payload interface{}
}

func (o *GetPoolsByGroupIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /groups/{group_id}/pools][%d] getPoolsByGroupIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetPoolsByGroupIDInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *GetPoolsByGroupIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
