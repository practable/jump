// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for accessing github.com/timdrysdale/crossbar websocket relay",
    "title": "Crossbar",
    "contact": {
      "name": "Timothy Drysdale",
      "url": "https://github.com/timdrysdale",
      "email": "timothy.d.drysdale@gmail.com"
    },
    "version": "0.3"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/session/{session_id}": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "access the specified session",
        "produces": [
          "application/json"
        ],
        "summary": "session",
        "operationId": "session",
        "parameters": [
          {
            "enum": [
              "readonly",
              "writeonly",
              "readwrite",
              "shellhost",
              "shellclient"
            ],
            "type": "string",
            "description": "The operator to apply on the variables",
            "name": "scope",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "format": "unix-timestamp",
            "description": "Earliest access time and start of session",
            "name": "nbf",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "format": "unix-timestamp",
            "description": "Latest access time and end of session",
            "name": "exp",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Session identification code",
            "name": "session_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "examples": {
              "text/plain": "b142eb22-1f16-4af1-ba14-e70a7afcbcc2"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          }
        }
      }
    }
  },
  "definitions": {
    "ScopeType": {
      "description": "Possible scopes are readonly, writeonly, readwrite, shellhost, shellclient",
      "type": "string",
      "title": "ScopeType",
      "enum": [
        "readonly",
        "writeonly",
        "readwrite",
        "shellhost",
        "shellclient"
      ]
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for accessing github.com/timdrysdale/crossbar websocket relay",
    "title": "Crossbar",
    "contact": {
      "name": "Timothy Drysdale",
      "url": "https://github.com/timdrysdale",
      "email": "timothy.d.drysdale@gmail.com"
    },
    "version": "0.3"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/session/{session_id}": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "access the specified session",
        "produces": [
          "application/json"
        ],
        "summary": "session",
        "operationId": "session",
        "parameters": [
          {
            "enum": [
              "readonly",
              "writeonly",
              "readwrite",
              "shellhost",
              "shellclient"
            ],
            "type": "string",
            "description": "The operator to apply on the variables",
            "name": "scope",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "format": "unix-timestamp",
            "description": "Earliest access time and start of session",
            "name": "nbf",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "format": "unix-timestamp",
            "description": "Latest access time and end of session",
            "name": "exp",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Session identification code",
            "name": "session_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "examples": {
              "text/plain": "b142eb22-1f16-4af1-ba14-e70a7afcbcc2"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          }
        }
      }
    }
  },
  "definitions": {
    "ScopeType": {
      "description": "Possible scopes are readonly, writeonly, readwrite, shellhost, shellclient",
      "type": "string",
      "title": "ScopeType",
      "enum": [
        "readonly",
        "writeonly",
        "readwrite",
        "shellhost",
        "shellclient"
      ]
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
