// Code generated by go-swagger; DO NOT EDIT.

package pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetPoolStatusByIDParams creates a new GetPoolStatusByIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetPoolStatusByIDParams() *GetPoolStatusByIDParams {
	return &GetPoolStatusByIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetPoolStatusByIDParamsWithTimeout creates a new GetPoolStatusByIDParams object
// with the ability to set a timeout on a request.
func NewGetPoolStatusByIDParamsWithTimeout(timeout time.Duration) *GetPoolStatusByIDParams {
	return &GetPoolStatusByIDParams{
		timeout: timeout,
	}
}

// NewGetPoolStatusByIDParamsWithContext creates a new GetPoolStatusByIDParams object
// with the ability to set a context for a request.
func NewGetPoolStatusByIDParamsWithContext(ctx context.Context) *GetPoolStatusByIDParams {
	return &GetPoolStatusByIDParams{
		Context: ctx,
	}
}

// NewGetPoolStatusByIDParamsWithHTTPClient creates a new GetPoolStatusByIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetPoolStatusByIDParamsWithHTTPClient(client *http.Client) *GetPoolStatusByIDParams {
	return &GetPoolStatusByIDParams{
		HTTPClient: client,
	}
}

/* GetPoolStatusByIDParams contains all the parameters to send to the API endpoint
   for the get pool status by ID operation.

   Typically these are written to a http.Request.
*/
type GetPoolStatusByIDParams struct {

	// Duration.
	//
	// Format: float64
	Duration *float64

	// PoolID.
	PoolID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get pool status by ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPoolStatusByIDParams) WithDefaults() *GetPoolStatusByIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get pool status by ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPoolStatusByIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get pool status by ID params
func (o *GetPoolStatusByIDParams) WithTimeout(timeout time.Duration) *GetPoolStatusByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get pool status by ID params
func (o *GetPoolStatusByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get pool status by ID params
func (o *GetPoolStatusByIDParams) WithContext(ctx context.Context) *GetPoolStatusByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get pool status by ID params
func (o *GetPoolStatusByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get pool status by ID params
func (o *GetPoolStatusByIDParams) WithHTTPClient(client *http.Client) *GetPoolStatusByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get pool status by ID params
func (o *GetPoolStatusByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDuration adds the duration to the get pool status by ID params
func (o *GetPoolStatusByIDParams) WithDuration(duration *float64) *GetPoolStatusByIDParams {
	o.SetDuration(duration)
	return o
}

// SetDuration adds the duration to the get pool status by ID params
func (o *GetPoolStatusByIDParams) SetDuration(duration *float64) {
	o.Duration = duration
}

// WithPoolID adds the poolID to the get pool status by ID params
func (o *GetPoolStatusByIDParams) WithPoolID(poolID string) *GetPoolStatusByIDParams {
	o.SetPoolID(poolID)
	return o
}

// SetPoolID adds the poolId to the get pool status by ID params
func (o *GetPoolStatusByIDParams) SetPoolID(poolID string) {
	o.PoolID = poolID
}

// WriteToRequest writes these params to a swagger request
func (o *GetPoolStatusByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Duration != nil {

		// query param duration
		var qrDuration float64

		if o.Duration != nil {
			qrDuration = *o.Duration
		}
		qDuration := swag.FormatFloat64(qrDuration)
		if qDuration != "" {

			if err := r.SetQueryParam("duration", qDuration); err != nil {
				return err
			}
		}
	}

	// path param pool_id
	if err := r.SetPathParam("pool_id", o.PoolID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
