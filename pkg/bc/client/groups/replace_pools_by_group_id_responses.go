// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/relay/pkg/bc/models"
)

// ReplacePoolsByGroupIDReader is a Reader for the ReplacePoolsByGroupID structure.
type ReplacePoolsByGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplacePoolsByGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplacePoolsByGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewReplacePoolsByGroupIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReplacePoolsByGroupIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReplacePoolsByGroupIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReplacePoolsByGroupIDOK creates a ReplacePoolsByGroupIDOK with default headers values
func NewReplacePoolsByGroupIDOK() *ReplacePoolsByGroupIDOK {
	return &ReplacePoolsByGroupIDOK{}
}

/*ReplacePoolsByGroupIDOK handles this case with default header values.

ReplacePoolsByGroupIDOK replace pools by group Id o k
*/
type ReplacePoolsByGroupIDOK struct {
	Payload models.IDList
}

func (o *ReplacePoolsByGroupIDOK) Error() string {
	return fmt.Sprintf("[PUT /groups/{group_id}/pools][%d] replacePoolsByGroupIdOK  %+v", 200, o.Payload)
}

func (o *ReplacePoolsByGroupIDOK) GetPayload() models.IDList {
	return o.Payload
}

func (o *ReplacePoolsByGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplacePoolsByGroupIDUnauthorized creates a ReplacePoolsByGroupIDUnauthorized with default headers values
func NewReplacePoolsByGroupIDUnauthorized() *ReplacePoolsByGroupIDUnauthorized {
	return &ReplacePoolsByGroupIDUnauthorized{}
}

/*ReplacePoolsByGroupIDUnauthorized handles this case with default header values.

Unauthorized
*/
type ReplacePoolsByGroupIDUnauthorized struct {
	Payload interface{}
}

func (o *ReplacePoolsByGroupIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /groups/{group_id}/pools][%d] replacePoolsByGroupIdUnauthorized  %+v", 401, o.Payload)
}

func (o *ReplacePoolsByGroupIDUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *ReplacePoolsByGroupIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplacePoolsByGroupIDNotFound creates a ReplacePoolsByGroupIDNotFound with default headers values
func NewReplacePoolsByGroupIDNotFound() *ReplacePoolsByGroupIDNotFound {
	return &ReplacePoolsByGroupIDNotFound{}
}

/*ReplacePoolsByGroupIDNotFound handles this case with default header values.

Not Found
*/
type ReplacePoolsByGroupIDNotFound struct {
}

func (o *ReplacePoolsByGroupIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /groups/{group_id}/pools][%d] replacePoolsByGroupIdNotFound ", 404)
}

func (o *ReplacePoolsByGroupIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplacePoolsByGroupIDInternalServerError creates a ReplacePoolsByGroupIDInternalServerError with default headers values
func NewReplacePoolsByGroupIDInternalServerError() *ReplacePoolsByGroupIDInternalServerError {
	return &ReplacePoolsByGroupIDInternalServerError{}
}

/*ReplacePoolsByGroupIDInternalServerError handles this case with default header values.

ReplacePoolsByGroupIDInternalServerError replace pools by group Id internal server error
*/
type ReplacePoolsByGroupIDInternalServerError struct {
	Payload interface{}
}

func (o *ReplacePoolsByGroupIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /groups/{group_id}/pools][%d] replacePoolsByGroupIdInternalServerError  %+v", 500, o.Payload)
}

func (o *ReplacePoolsByGroupIDInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *ReplacePoolsByGroupIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
