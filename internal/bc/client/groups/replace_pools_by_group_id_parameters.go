// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/relay/pkg/bc/models"
)

// NewReplacePoolsByGroupIDParams creates a new ReplacePoolsByGroupIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewReplacePoolsByGroupIDParams() *ReplacePoolsByGroupIDParams {
	return &ReplacePoolsByGroupIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewReplacePoolsByGroupIDParamsWithTimeout creates a new ReplacePoolsByGroupIDParams object
// with the ability to set a timeout on a request.
func NewReplacePoolsByGroupIDParamsWithTimeout(timeout time.Duration) *ReplacePoolsByGroupIDParams {
	return &ReplacePoolsByGroupIDParams{
		timeout: timeout,
	}
}

// NewReplacePoolsByGroupIDParamsWithContext creates a new ReplacePoolsByGroupIDParams object
// with the ability to set a context for a request.
func NewReplacePoolsByGroupIDParamsWithContext(ctx context.Context) *ReplacePoolsByGroupIDParams {
	return &ReplacePoolsByGroupIDParams{
		Context: ctx,
	}
}

// NewReplacePoolsByGroupIDParamsWithHTTPClient creates a new ReplacePoolsByGroupIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewReplacePoolsByGroupIDParamsWithHTTPClient(client *http.Client) *ReplacePoolsByGroupIDParams {
	return &ReplacePoolsByGroupIDParams{
		HTTPClient: client,
	}
}

/* ReplacePoolsByGroupIDParams contains all the parameters to send to the API endpoint
   for the replace pools by group ID operation.

   Typically these are written to a http.Request.
*/
type ReplacePoolsByGroupIDParams struct {

	// GroupID.
	GroupID string

	// Pools.
	Pools models.IDList

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the replace pools by group ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ReplacePoolsByGroupIDParams) WithDefaults() *ReplacePoolsByGroupIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the replace pools by group ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ReplacePoolsByGroupIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the replace pools by group ID params
func (o *ReplacePoolsByGroupIDParams) WithTimeout(timeout time.Duration) *ReplacePoolsByGroupIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the replace pools by group ID params
func (o *ReplacePoolsByGroupIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the replace pools by group ID params
func (o *ReplacePoolsByGroupIDParams) WithContext(ctx context.Context) *ReplacePoolsByGroupIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the replace pools by group ID params
func (o *ReplacePoolsByGroupIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the replace pools by group ID params
func (o *ReplacePoolsByGroupIDParams) WithHTTPClient(client *http.Client) *ReplacePoolsByGroupIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the replace pools by group ID params
func (o *ReplacePoolsByGroupIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroupID adds the groupID to the replace pools by group ID params
func (o *ReplacePoolsByGroupIDParams) WithGroupID(groupID string) *ReplacePoolsByGroupIDParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the replace pools by group ID params
func (o *ReplacePoolsByGroupIDParams) SetGroupID(groupID string) {
	o.GroupID = groupID
}

// WithPools adds the pools to the replace pools by group ID params
func (o *ReplacePoolsByGroupIDParams) WithPools(pools models.IDList) *ReplacePoolsByGroupIDParams {
	o.SetPools(pools)
	return o
}

// SetPools adds the pools to the replace pools by group ID params
func (o *ReplacePoolsByGroupIDParams) SetPools(pools models.IDList) {
	o.Pools = pools
}

// WriteToRequest writes these params to a swagger request
func (o *ReplacePoolsByGroupIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param group_id
	if err := r.SetPathParam("group_id", o.GroupID); err != nil {
		return err
	}
	if o.Pools != nil {
		if err := r.SetBodyParam(o.Pools); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
