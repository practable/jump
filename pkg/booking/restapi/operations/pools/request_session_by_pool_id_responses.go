// Code generated by go-swagger; DO NOT EDIT.

package pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/timdrysdale/relay/pkg/booking/models"
)

// RequestSessionByPoolIDOKCode is the HTTP code returned for type RequestSessionByPoolIDOK
const RequestSessionByPoolIDOKCode int = 200

/*RequestSessionByPoolIDOK request session by pool Id o k

swagger:response requestSessionByPoolIdOK
*/
type RequestSessionByPoolIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Activity `json:"body,omitempty"`
}

// NewRequestSessionByPoolIDOK creates RequestSessionByPoolIDOK with default headers values
func NewRequestSessionByPoolIDOK() *RequestSessionByPoolIDOK {

	return &RequestSessionByPoolIDOK{}
}

// WithPayload adds the payload to the request session by pool Id o k response
func (o *RequestSessionByPoolIDOK) WithPayload(payload *models.Activity) *RequestSessionByPoolIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request session by pool Id o k response
func (o *RequestSessionByPoolIDOK) SetPayload(payload *models.Activity) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestSessionByPoolIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestSessionByPoolIDUnauthorizedCode is the HTTP code returned for type RequestSessionByPoolIDUnauthorized
const RequestSessionByPoolIDUnauthorizedCode int = 401

/*RequestSessionByPoolIDUnauthorized Unauthorized

swagger:response requestSessionByPoolIdUnauthorized
*/
type RequestSessionByPoolIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewRequestSessionByPoolIDUnauthorized creates RequestSessionByPoolIDUnauthorized with default headers values
func NewRequestSessionByPoolIDUnauthorized() *RequestSessionByPoolIDUnauthorized {

	return &RequestSessionByPoolIDUnauthorized{}
}

// WithPayload adds the payload to the request session by pool Id unauthorized response
func (o *RequestSessionByPoolIDUnauthorized) WithPayload(payload interface{}) *RequestSessionByPoolIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request session by pool Id unauthorized response
func (o *RequestSessionByPoolIDUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestSessionByPoolIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// RequestSessionByPoolIDPaymentRequiredCode is the HTTP code returned for type RequestSessionByPoolIDPaymentRequired
const RequestSessionByPoolIDPaymentRequiredCode int = 402

/*RequestSessionByPoolIDPaymentRequired Quota Exceeded

swagger:response requestSessionByPoolIdPaymentRequired
*/
type RequestSessionByPoolIDPaymentRequired struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewRequestSessionByPoolIDPaymentRequired creates RequestSessionByPoolIDPaymentRequired with default headers values
func NewRequestSessionByPoolIDPaymentRequired() *RequestSessionByPoolIDPaymentRequired {

	return &RequestSessionByPoolIDPaymentRequired{}
}

// WithPayload adds the payload to the request session by pool Id payment required response
func (o *RequestSessionByPoolIDPaymentRequired) WithPayload(payload interface{}) *RequestSessionByPoolIDPaymentRequired {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request session by pool Id payment required response
func (o *RequestSessionByPoolIDPaymentRequired) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestSessionByPoolIDPaymentRequired) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(402)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// RequestSessionByPoolIDNotFoundCode is the HTTP code returned for type RequestSessionByPoolIDNotFound
const RequestSessionByPoolIDNotFoundCode int = 404

/*RequestSessionByPoolIDNotFound Not Available

swagger:response requestSessionByPoolIdNotFound
*/
type RequestSessionByPoolIDNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewRequestSessionByPoolIDNotFound creates RequestSessionByPoolIDNotFound with default headers values
func NewRequestSessionByPoolIDNotFound() *RequestSessionByPoolIDNotFound {

	return &RequestSessionByPoolIDNotFound{}
}

// WithPayload adds the payload to the request session by pool Id not found response
func (o *RequestSessionByPoolIDNotFound) WithPayload(payload interface{}) *RequestSessionByPoolIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request session by pool Id not found response
func (o *RequestSessionByPoolIDNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestSessionByPoolIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
