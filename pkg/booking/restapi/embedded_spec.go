// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "User API for booking experiments",
    "title": "Booking",
    "contact": {
      "name": "Tim Drysdale",
      "url": "https://practable.io",
      "email": "timothy.d.drysdale@gmail.com"
    },
    "version": "0.3"
  },
  "host": "book.practable.io",
  "basePath": "/api/v1",
  "paths": {
    "/groups": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Gets group id for a given group name",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groups"
        ],
        "summary": "groups",
        "operationId": "getGroupIDByName",
        "parameters": [
          {
            "type": "string",
            "description": "Search by group name",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "description": "group id",
                "type": "string",
                "example": "3a834b55-07c8-cb39-a341-3a82b263e07c"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "schema": {}
          }
        }
      }
    },
    "/groups/{group_id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Gets a description of a group",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groups"
        ],
        "summary": "groups",
        "operationId": "getGroupDescriptionByID",
        "parameters": [
          {
            "type": "string",
            "name": "group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/description"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "schema": {}
          }
        }
      }
    },
    "/login": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Login with a class token to get an individual booking token, usable for a finite period.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "login"
        ],
        "summary": "login",
        "operationId": "login",
        "parameters": [
          {
            "name": "expired",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "description": "booking token",
                  "type": "string",
                  "example": "ey..."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/bookingtoken"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    },
    "/pools": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Gets a list of pool_ids associated with a group_id",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "get pool ids in a group",
        "operationId": "getPoolsByGroupID",
        "parameters": [
          {
            "type": "string",
            "description": "Search by group name",
            "name": "group_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "description": "pool id",
                "type": "string",
                "example": "5a834b5d-0758-4039-a044-6a82b263e079"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "schema": {}
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Add a pool to the poolstore, using details in body",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Add a new pool",
        "operationId": "addNewPool",
        "parameters": [
          {
            "name": "pool",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pool"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "404": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "schema": {}
          }
        }
      }
    },
    "/pools/{pool_id}/activities": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Adds an activity to a pool (activty must include valid exp field)",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Adds an activity to a pool",
        "operationId": "addActivityByPoolID",
        "parameters": [
          {
            "type": "string",
            "name": "pool_id",
            "in": "path",
            "required": true
          },
          {
            "name": "activity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/activity"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "404": {
            "description": "Not Available",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    },
    "/pools/{pool_id}/activities/{activity_id}": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Updates an activity in a pool (or adds one with a specific ID if does not exist)",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Update an activity in a pool",
        "operationId": "updateActivityByID",
        "parameters": [
          {
            "type": "string",
            "name": "pool_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "activity_id",
            "in": "path",
            "required": true
          },
          {
            "name": "activity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/activity"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    },
    "/pools/{pool_id}/description": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Gets a description of the pool",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "pools",
        "operationId": "getPoolDescriptionByID",
        "parameters": [
          {
            "type": "string",
            "name": "pool_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/description"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    },
    "/pools/{pool_id}/sessions": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Request a session on an activity from the pool",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Requests a session from a pool",
        "operationId": "requestSessionByPoolID",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "duration of requested booking in seconds",
            "name": "duration",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "pool_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/activity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "402": {
            "description": "Quota Exceeded",
            "schema": {}
          },
          "404": {
            "description": "Not Available",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    },
    "/pools/{pool_id}/status": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Gets the status of pool's activities",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Gets the status of the pool's activities",
        "operationId": "getPoolStatusByID",
        "parameters": [
          {
            "type": "string",
            "name": "pool_id",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "format": "float64",
            "name": "duration",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    }
  },
  "definitions": {
    "activity": {
      "description": "An activity represents connection details to instances of pre-agreed resource types such as video, data streams and user interfaces.",
      "type": "object",
      "title": "activity",
      "required": [
        "streams",
        "uis",
        "description",
        "nbf",
        "exp",
        "aud"
      ],
      "properties": {
        "aud": {
          "description": "Audience",
          "type": "string"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "exp": {
          "description": "Expires At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "iat": {
          "description": "Issued At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "iss": {
          "description": "Issuer",
          "type": "string"
        },
        "nbf": {
          "description": "Not before",
          "type": "number",
          "format": "unix-timestamp"
        },
        "streams": {
          "description": "A list of streams",
          "type": "array",
          "items": {
            "$ref": "#/definitions/stream"
          }
        },
        "sub": {
          "description": "Subject",
          "type": "string"
        },
        "uis": {
          "description": "User interfaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/userInterface"
          }
        }
      }
    },
    "bookingtoken": {
      "description": "contains token plus its details",
      "type": "object",
      "title": "booking token details",
      "required": [
        "token",
        "nbf",
        "exp",
        "aud",
        "sub",
        "groups",
        "scopes"
      ],
      "properties": {
        "aud": {
          "description": "Audience",
          "type": "string"
        },
        "exp": {
          "description": "Expires At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "groups": {
          "description": "List of group names (not ID)",
          "type": "array",
          "items": {
            "type": "string",
            "example": "stuff"
          }
        },
        "iat": {
          "description": "Issued At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "nbf": {
          "description": "Not before",
          "type": "number",
          "format": "unix-timestamp"
        },
        "pools": {
          "description": "List of pool IDs (not name)",
          "type": "array",
          "items": {
            "type": "string",
            "example": "d220c320-eb88-456b-b1dd-b36dae840af2"
          }
        },
        "scopes": {
          "description": "List of scopes",
          "type": "array",
          "items": {
            "type": "string",
            "example": "booking"
          }
        },
        "sub": {
          "description": "Subject",
          "type": "string"
        },
        "token": {
          "description": "booking token",
          "type": "string",
          "example": "ey..."
        }
      }
    },
    "description": {
      "description": "Description of a resource e.g. pool, activity, user interface",
      "type": "object",
      "title": "description",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "further": {
          "description": "URL for further information",
          "type": "string",
          "example": "https://static.practable.io/info/penduino/ui.html"
        },
        "id": {
          "description": "Identification used in PoolStore",
          "type": "string"
        },
        "image": {
          "description": "URL of main image (500x500)",
          "type": "string",
          "example": "https://assets.practable.io/images/penduino-500x500.png"
        },
        "long": {
          "description": "280 char additional description of the interface in plain text",
          "type": "string"
        },
        "name": {
          "description": "Display name",
          "type": "string",
          "example": "Penduino (basic)"
        },
        "short": {
          "description": "140 char max description of the interface in plain text",
          "type": "string",
          "example": "Interface to the penduino electromagnetic pendulum with variable drive, active braking, short and open circuit loading."
        },
        "thumb": {
          "description": "URL of thumbnail image (150x150)",
          "type": "string",
          "example": "https://assets.practable.io/images/penduino-150x150.png"
        },
        "type": {
          "description": "Type of resource being described, e.g. pool, activity, userinterface",
          "type": "string",
          "example": "userinterface"
        }
      },
      "example": {
        "further": "https://static.practable.io/descriptions/pools/penduino/index.html",
        "image": "https://assets.practable.io/images/pools/penduino/image.png",
        "long": "Some longer description",
        "name": "Penduino (basic)",
        "short": "Penduino electromagnetic pendulums with pulsed drive and braking",
        "thumb": "https://assets.practable.io/images/pools/penduino/thumb.png",
        "type": "pool"
      }
    },
    "id": {
      "description": "id of a resource",
      "type": "object",
      "title": "id",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "identification",
          "type": "string",
          "example": "d220c320-eb88-456b-b1dd-b36dae840af2"
        }
      },
      "example": {
        "id": "d220c320-eb88-456b-b1dd-b36dae840af2"
      }
    },
    "pool": {
      "description": "Represents a pool",
      "type": "object",
      "title": "pool",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "$ref": "#/definitions/description"
        },
        "max_session": {
          "type": "number",
          "format": "int64"
        },
        "min_session": {
          "type": "number",
          "format": "int64"
        }
      }
    },
    "status": {
      "description": "Status of a pool",
      "type": "object",
      "title": "status",
      "required": [
        "available"
      ],
      "properties": {
        "available": {
          "description": "Number of available kits",
          "type": "number",
          "format": "int",
          "example": 3
        },
        "later": {
          "description": "Kit available later?",
          "type": "boolean",
          "example": true
        },
        "used": {
          "description": "Number of kits in use",
          "type": "number",
          "format": "int",
          "example": 5
        },
        "wait": {
          "description": "Wait time in seconds until first kit available later",
          "type": "number",
          "format": "int64",
          "example": 3200
        }
      },
      "example": {
        "available": 3,
        "inuse": 5,
        "wait": 0
      }
    },
    "stream": {
      "description": "Represents an assigned, valid booking slot for an individual piece of equipment",
      "type": "object",
      "title": "stream",
      "required": [
        "for",
        "url",
        "token"
      ],
      "properties": {
        "exp": {
          "description": "Expires At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "for": {
          "description": "Describes the stream, and doubles as template key in the URL",
          "type": "string",
          "example": "video"
        },
        "iat": {
          "description": "Issued At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "nbf": {
          "description": "Not Before",
          "type": "number",
          "format": "unix-timestamp"
        },
        "token": {
          "description": "JWT bearer token for submitting in the header when making the request at the URL",
          "type": "string"
        },
        "url": {
          "description": "URL at which to obtain access to the stream (getting a redirect URL containing a one time code)",
          "type": "string",
          "example": "https://relay-access.practable.io/session/abc123"
        },
        "verb": {
          "description": "HTPP verb to use when making request to the URL",
          "type": "string",
          "default": "POST",
          "example": "POST"
        }
      },
      "example": {
        "for": "video",
        "token": "ey....",
        "url": "https://relay-access.practable.io/session/abc123"
      }
    },
    "userInterface": {
      "description": "User interface",
      "type": "object",
      "title": "userInterface",
      "required": [
        "url",
        "description"
      ],
      "properties": {
        "description": {
          "$ref": "#/definitions/description"
        },
        "streamsRequired": {
          "description": "list of names of required streams",
          "type": "array",
          "items": {
            "description": "stream name",
            "type": "string",
            "example": "video"
          },
          "example": [
            "data",
            "video"
          ]
        },
        "url": {
          "description": "URL of the user interface",
          "type": "string",
          "example": "https://static.practable.io/ui/penduino-basic.html?video={{video}}\u0026data={{data}}"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "groups"
    },
    {
      "name": "pools"
    },
    {
      "name": "login"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "User API for booking experiments",
    "title": "Booking",
    "contact": {
      "name": "Tim Drysdale",
      "url": "https://practable.io",
      "email": "timothy.d.drysdale@gmail.com"
    },
    "version": "0.3"
  },
  "host": "book.practable.io",
  "basePath": "/api/v1",
  "paths": {
    "/groups": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Gets group id for a given group name",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groups"
        ],
        "summary": "groups",
        "operationId": "getGroupIDByName",
        "parameters": [
          {
            "type": "string",
            "description": "Search by group name",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "description": "group id",
                "type": "string",
                "example": "3a834b55-07c8-cb39-a341-3a82b263e07c"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "schema": {}
          }
        }
      }
    },
    "/groups/{group_id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Gets a description of a group",
        "produces": [
          "application/json"
        ],
        "tags": [
          "groups"
        ],
        "summary": "groups",
        "operationId": "getGroupDescriptionByID",
        "parameters": [
          {
            "type": "string",
            "name": "group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/description"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "schema": {}
          }
        }
      }
    },
    "/login": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Login with a class token to get an individual booking token, usable for a finite period.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "login"
        ],
        "summary": "login",
        "operationId": "login",
        "parameters": [
          {
            "name": "expired",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "description": "booking token",
                  "type": "string",
                  "example": "ey..."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/bookingtoken"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    },
    "/pools": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Gets a list of pool_ids associated with a group_id",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "get pool ids in a group",
        "operationId": "getPoolsByGroupID",
        "parameters": [
          {
            "type": "string",
            "description": "Search by group name",
            "name": "group_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "description": "pool id",
                "type": "string",
                "example": "5a834b5d-0758-4039-a044-6a82b263e079"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "schema": {}
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Add a pool to the poolstore, using details in body",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Add a new pool",
        "operationId": "addNewPool",
        "parameters": [
          {
            "name": "pool",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pool"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "404": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "schema": {}
          }
        }
      }
    },
    "/pools/{pool_id}/activities": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Adds an activity to a pool (activty must include valid exp field)",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Adds an activity to a pool",
        "operationId": "addActivityByPoolID",
        "parameters": [
          {
            "type": "string",
            "name": "pool_id",
            "in": "path",
            "required": true
          },
          {
            "name": "activity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/activity"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "404": {
            "description": "Not Available",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    },
    "/pools/{pool_id}/activities/{activity_id}": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Updates an activity in a pool (or adds one with a specific ID if does not exist)",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Update an activity in a pool",
        "operationId": "updateActivityByID",
        "parameters": [
          {
            "type": "string",
            "name": "pool_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "activity_id",
            "in": "path",
            "required": true
          },
          {
            "name": "activity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/activity"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    },
    "/pools/{pool_id}/description": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Gets a description of the pool",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "pools",
        "operationId": "getPoolDescriptionByID",
        "parameters": [
          {
            "type": "string",
            "name": "pool_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/description"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    },
    "/pools/{pool_id}/sessions": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Request a session on an activity from the pool",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Requests a session from a pool",
        "operationId": "requestSessionByPoolID",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "duration of requested booking in seconds",
            "name": "duration",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "pool_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/activity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "402": {
            "description": "Quota Exceeded",
            "schema": {}
          },
          "404": {
            "description": "Not Available",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    },
    "/pools/{pool_id}/status": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Gets the status of pool's activities",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Gets the status of the pool's activities",
        "operationId": "getPoolStatusByID",
        "parameters": [
          {
            "type": "string",
            "name": "pool_id",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "format": "float64",
            "name": "duration",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {}
          },
          "500": {
            "description": "Internal Error",
            "schema": {}
          }
        }
      }
    }
  },
  "definitions": {
    "activity": {
      "description": "An activity represents connection details to instances of pre-agreed resource types such as video, data streams and user interfaces.",
      "type": "object",
      "title": "activity",
      "required": [
        "streams",
        "uis",
        "description",
        "nbf",
        "exp",
        "aud"
      ],
      "properties": {
        "aud": {
          "description": "Audience",
          "type": "string"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "exp": {
          "description": "Expires At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "iat": {
          "description": "Issued At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "iss": {
          "description": "Issuer",
          "type": "string"
        },
        "nbf": {
          "description": "Not before",
          "type": "number",
          "format": "unix-timestamp"
        },
        "streams": {
          "description": "A list of streams",
          "type": "array",
          "items": {
            "$ref": "#/definitions/stream"
          }
        },
        "sub": {
          "description": "Subject",
          "type": "string"
        },
        "uis": {
          "description": "User interfaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/userInterface"
          }
        }
      }
    },
    "bookingtoken": {
      "description": "contains token plus its details",
      "type": "object",
      "title": "booking token details",
      "required": [
        "token",
        "nbf",
        "exp",
        "aud",
        "sub",
        "groups",
        "scopes"
      ],
      "properties": {
        "aud": {
          "description": "Audience",
          "type": "string"
        },
        "exp": {
          "description": "Expires At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "groups": {
          "description": "List of group names (not ID)",
          "type": "array",
          "items": {
            "type": "string",
            "example": "stuff"
          }
        },
        "iat": {
          "description": "Issued At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "nbf": {
          "description": "Not before",
          "type": "number",
          "format": "unix-timestamp"
        },
        "pools": {
          "description": "List of pool IDs (not name)",
          "type": "array",
          "items": {
            "type": "string",
            "example": "d220c320-eb88-456b-b1dd-b36dae840af2"
          }
        },
        "scopes": {
          "description": "List of scopes",
          "type": "array",
          "items": {
            "type": "string",
            "example": "booking"
          }
        },
        "sub": {
          "description": "Subject",
          "type": "string"
        },
        "token": {
          "description": "booking token",
          "type": "string",
          "example": "ey..."
        }
      }
    },
    "description": {
      "description": "Description of a resource e.g. pool, activity, user interface",
      "type": "object",
      "title": "description",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "further": {
          "description": "URL for further information",
          "type": "string",
          "example": "https://static.practable.io/info/penduino/ui.html"
        },
        "id": {
          "description": "Identification used in PoolStore",
          "type": "string"
        },
        "image": {
          "description": "URL of main image (500x500)",
          "type": "string",
          "example": "https://assets.practable.io/images/penduino-500x500.png"
        },
        "long": {
          "description": "280 char additional description of the interface in plain text",
          "type": "string"
        },
        "name": {
          "description": "Display name",
          "type": "string",
          "example": "Penduino (basic)"
        },
        "short": {
          "description": "140 char max description of the interface in plain text",
          "type": "string",
          "example": "Interface to the penduino electromagnetic pendulum with variable drive, active braking, short and open circuit loading."
        },
        "thumb": {
          "description": "URL of thumbnail image (150x150)",
          "type": "string",
          "example": "https://assets.practable.io/images/penduino-150x150.png"
        },
        "type": {
          "description": "Type of resource being described, e.g. pool, activity, userinterface",
          "type": "string",
          "example": "userinterface"
        }
      },
      "example": {
        "further": "https://static.practable.io/descriptions/pools/penduino/index.html",
        "image": "https://assets.practable.io/images/pools/penduino/image.png",
        "long": "Some longer description",
        "name": "Penduino (basic)",
        "short": "Penduino electromagnetic pendulums with pulsed drive and braking",
        "thumb": "https://assets.practable.io/images/pools/penduino/thumb.png",
        "type": "pool"
      }
    },
    "id": {
      "description": "id of a resource",
      "type": "object",
      "title": "id",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "identification",
          "type": "string",
          "example": "d220c320-eb88-456b-b1dd-b36dae840af2"
        }
      },
      "example": {
        "id": "d220c320-eb88-456b-b1dd-b36dae840af2"
      }
    },
    "pool": {
      "description": "Represents a pool",
      "type": "object",
      "title": "pool",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "$ref": "#/definitions/description"
        },
        "max_session": {
          "type": "number",
          "format": "int64"
        },
        "min_session": {
          "type": "number",
          "format": "int64"
        }
      }
    },
    "status": {
      "description": "Status of a pool",
      "type": "object",
      "title": "status",
      "required": [
        "available"
      ],
      "properties": {
        "available": {
          "description": "Number of available kits",
          "type": "number",
          "format": "int",
          "example": 3
        },
        "later": {
          "description": "Kit available later?",
          "type": "boolean",
          "example": true
        },
        "used": {
          "description": "Number of kits in use",
          "type": "number",
          "format": "int",
          "example": 5
        },
        "wait": {
          "description": "Wait time in seconds until first kit available later",
          "type": "number",
          "format": "int64",
          "example": 3200
        }
      },
      "example": {
        "available": 3,
        "inuse": 5,
        "wait": 0
      }
    },
    "stream": {
      "description": "Represents an assigned, valid booking slot for an individual piece of equipment",
      "type": "object",
      "title": "stream",
      "required": [
        "for",
        "url",
        "token"
      ],
      "properties": {
        "exp": {
          "description": "Expires At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "for": {
          "description": "Describes the stream, and doubles as template key in the URL",
          "type": "string",
          "example": "video"
        },
        "iat": {
          "description": "Issued At",
          "type": "number",
          "format": "unix-timestamp"
        },
        "nbf": {
          "description": "Not Before",
          "type": "number",
          "format": "unix-timestamp"
        },
        "token": {
          "description": "JWT bearer token for submitting in the header when making the request at the URL",
          "type": "string"
        },
        "url": {
          "description": "URL at which to obtain access to the stream (getting a redirect URL containing a one time code)",
          "type": "string",
          "example": "https://relay-access.practable.io/session/abc123"
        },
        "verb": {
          "description": "HTPP verb to use when making request to the URL",
          "type": "string",
          "default": "POST",
          "example": "POST"
        }
      },
      "example": {
        "for": "video",
        "token": "ey....",
        "url": "https://relay-access.practable.io/session/abc123"
      }
    },
    "userInterface": {
      "description": "User interface",
      "type": "object",
      "title": "userInterface",
      "required": [
        "url",
        "description"
      ],
      "properties": {
        "description": {
          "$ref": "#/definitions/description"
        },
        "streamsRequired": {
          "description": "list of names of required streams",
          "type": "array",
          "items": {
            "description": "stream name",
            "type": "string",
            "example": "video"
          },
          "example": [
            "data",
            "video"
          ]
        },
        "url": {
          "description": "URL of the user interface",
          "type": "string",
          "example": "https://static.practable.io/ui/penduino-basic.html?video={{video}}\u0026data={{data}}"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "groups"
    },
    {
      "name": "pools"
    },
    {
      "name": "login"
    }
  ]
}`))
}
