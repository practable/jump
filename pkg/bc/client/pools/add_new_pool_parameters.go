// Code generated by go-swagger; DO NOT EDIT.

package pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/relay/pkg/bc/models"
)

// NewAddNewPoolParams creates a new AddNewPoolParams object
// with the default values initialized.
func NewAddNewPoolParams() *AddNewPoolParams {
	var ()
	return &AddNewPoolParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddNewPoolParamsWithTimeout creates a new AddNewPoolParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddNewPoolParamsWithTimeout(timeout time.Duration) *AddNewPoolParams {
	var ()
	return &AddNewPoolParams{

		timeout: timeout,
	}
}

// NewAddNewPoolParamsWithContext creates a new AddNewPoolParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddNewPoolParamsWithContext(ctx context.Context) *AddNewPoolParams {
	var ()
	return &AddNewPoolParams{

		Context: ctx,
	}
}

// NewAddNewPoolParamsWithHTTPClient creates a new AddNewPoolParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddNewPoolParamsWithHTTPClient(client *http.Client) *AddNewPoolParams {
	var ()
	return &AddNewPoolParams{
		HTTPClient: client,
	}
}

/*AddNewPoolParams contains all the parameters to send to the API endpoint
for the add new pool operation typically these are written to a http.Request
*/
type AddNewPoolParams struct {

	/*Pool*/
	Pool *models.Pool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add new pool params
func (o *AddNewPoolParams) WithTimeout(timeout time.Duration) *AddNewPoolParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add new pool params
func (o *AddNewPoolParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add new pool params
func (o *AddNewPoolParams) WithContext(ctx context.Context) *AddNewPoolParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add new pool params
func (o *AddNewPoolParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add new pool params
func (o *AddNewPoolParams) WithHTTPClient(client *http.Client) *AddNewPoolParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add new pool params
func (o *AddNewPoolParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPool adds the pool to the add new pool params
func (o *AddNewPoolParams) WithPool(pool *models.Pool) *AddNewPoolParams {
	o.SetPool(pool)
	return o
}

// SetPool adds the pool to the add new pool params
func (o *AddNewPoolParams) SetPool(pool *models.Pool) {
	o.Pool = pool
}

// WriteToRequest writes these params to a swagger request
func (o *AddNewPoolParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Pool != nil {
		if err := r.SetBodyParam(o.Pool); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
