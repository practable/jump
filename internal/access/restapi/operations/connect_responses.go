// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/practable/jump/internal/access/models"
)

// ConnectOKCode is the HTTP code returned for type ConnectOK
const ConnectOKCode int = 200

/*ConnectOK connect o k

swagger:response connectOK
*/
type ConnectOK struct {

	/*
	  In: Body
	*/
	Payload *ConnectOKBody `json:"body,omitempty"`
}

// NewConnectOK creates ConnectOK with default headers values
func NewConnectOK() *ConnectOK {

	return &ConnectOK{}
}

// WithPayload adds the payload to the connect o k response
func (o *ConnectOK) WithPayload(payload *ConnectOKBody) *ConnectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the connect o k response
func (o *ConnectOK) SetPayload(payload *ConnectOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConnectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConnectBadRequestCode is the HTTP code returned for type ConnectBadRequest
const ConnectBadRequestCode int = 400

/*ConnectBadRequest BadRequest

swagger:response connectBadRequest
*/
type ConnectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewConnectBadRequest creates ConnectBadRequest with default headers values
func NewConnectBadRequest() *ConnectBadRequest {

	return &ConnectBadRequest{}
}

// WithPayload adds the payload to the connect bad request response
func (o *ConnectBadRequest) WithPayload(payload *models.Error) *ConnectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the connect bad request response
func (o *ConnectBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConnectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConnectUnauthorizedCode is the HTTP code returned for type ConnectUnauthorized
const ConnectUnauthorizedCode int = 401

/*ConnectUnauthorized Unauthorized

swagger:response connectUnauthorized
*/
type ConnectUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewConnectUnauthorized creates ConnectUnauthorized with default headers values
func NewConnectUnauthorized() *ConnectUnauthorized {

	return &ConnectUnauthorized{}
}

// WithPayload adds the payload to the connect unauthorized response
func (o *ConnectUnauthorized) WithPayload(payload *models.Error) *ConnectUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the connect unauthorized response
func (o *ConnectUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConnectUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConnectInternalServerErrorCode is the HTTP code returned for type ConnectInternalServerError
const ConnectInternalServerErrorCode int = 500

/*ConnectInternalServerError Internal Error

swagger:response connectInternalServerError
*/
type ConnectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewConnectInternalServerError creates ConnectInternalServerError with default headers values
func NewConnectInternalServerError() *ConnectInternalServerError {

	return &ConnectInternalServerError{}
}

// WithPayload adds the payload to the connect internal server error response
func (o *ConnectInternalServerError) WithPayload(payload *models.Error) *ConnectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the connect internal server error response
func (o *ConnectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConnectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
