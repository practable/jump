// Code generated by go-swagger; DO NOT EDIT.

package pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/relay/pkg/bc/models"
)

// NewAddActivityByPoolIDParams creates a new AddActivityByPoolIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddActivityByPoolIDParams() *AddActivityByPoolIDParams {
	return &AddActivityByPoolIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddActivityByPoolIDParamsWithTimeout creates a new AddActivityByPoolIDParams object
// with the ability to set a timeout on a request.
func NewAddActivityByPoolIDParamsWithTimeout(timeout time.Duration) *AddActivityByPoolIDParams {
	return &AddActivityByPoolIDParams{
		timeout: timeout,
	}
}

// NewAddActivityByPoolIDParamsWithContext creates a new AddActivityByPoolIDParams object
// with the ability to set a context for a request.
func NewAddActivityByPoolIDParamsWithContext(ctx context.Context) *AddActivityByPoolIDParams {
	return &AddActivityByPoolIDParams{
		Context: ctx,
	}
}

// NewAddActivityByPoolIDParamsWithHTTPClient creates a new AddActivityByPoolIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddActivityByPoolIDParamsWithHTTPClient(client *http.Client) *AddActivityByPoolIDParams {
	return &AddActivityByPoolIDParams{
		HTTPClient: client,
	}
}

/* AddActivityByPoolIDParams contains all the parameters to send to the API endpoint
   for the add activity by pool ID operation.

   Typically these are written to a http.Request.
*/
type AddActivityByPoolIDParams struct {

	// Activity.
	Activity *models.Activity

	// PoolID.
	PoolID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add activity by pool ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddActivityByPoolIDParams) WithDefaults() *AddActivityByPoolIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add activity by pool ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddActivityByPoolIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the add activity by pool ID params
func (o *AddActivityByPoolIDParams) WithTimeout(timeout time.Duration) *AddActivityByPoolIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add activity by pool ID params
func (o *AddActivityByPoolIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add activity by pool ID params
func (o *AddActivityByPoolIDParams) WithContext(ctx context.Context) *AddActivityByPoolIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add activity by pool ID params
func (o *AddActivityByPoolIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add activity by pool ID params
func (o *AddActivityByPoolIDParams) WithHTTPClient(client *http.Client) *AddActivityByPoolIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add activity by pool ID params
func (o *AddActivityByPoolIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActivity adds the activity to the add activity by pool ID params
func (o *AddActivityByPoolIDParams) WithActivity(activity *models.Activity) *AddActivityByPoolIDParams {
	o.SetActivity(activity)
	return o
}

// SetActivity adds the activity to the add activity by pool ID params
func (o *AddActivityByPoolIDParams) SetActivity(activity *models.Activity) {
	o.Activity = activity
}

// WithPoolID adds the poolID to the add activity by pool ID params
func (o *AddActivityByPoolIDParams) WithPoolID(poolID string) *AddActivityByPoolIDParams {
	o.SetPoolID(poolID)
	return o
}

// SetPoolID adds the poolId to the add activity by pool ID params
func (o *AddActivityByPoolIDParams) SetPoolID(poolID string) {
	o.PoolID = poolID
}

// WriteToRequest writes these params to a swagger request
func (o *AddActivityByPoolIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Activity != nil {
		if err := r.SetBodyParam(o.Activity); err != nil {
			return err
		}
	}

	// path param pool_id
	if err := r.SetPathParam("pool_id", o.PoolID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
